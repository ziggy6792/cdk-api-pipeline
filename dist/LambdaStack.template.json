{
  "Resources": {
    "MyLambdaServiceRole4539ECB6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/MyLambda/ServiceRole/Resource"
      }
    },
    "MyLambdaCCE802FB": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "MyLambdaLambdaSourceBucketNameParameterBD6A9DA0"
          },
          "S3Key": {
            "Ref": "MyLambdaLambdaSourceObjectKeyParameter3F0BB05D"
          }
        },
        "Handler": "build/lambda.handler",
        "Role": {
          "Fn::GetAtt": [
            "MyLambdaServiceRole4539ECB6",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x"
      },
      "DependsOn": [
        "MyLambdaServiceRole4539ECB6"
      ],
      "Metadata": {
        "aws:cdk:path": "LambdaStack/MyLambda/Resource"
      }
    },
    "MyLambdaVersion20210102T061438220ZF893950D": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "MyLambdaCCE802FB"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/MyLambda/Version2021-01-02T06:14:38.220Z/Resource"
      }
    },
    "LambdaAlias9C15A666": {
      "Type": "AWS::Lambda::Alias",
      "Properties": {
        "FunctionName": {
          "Ref": "MyLambdaCCE802FB"
        },
        "FunctionVersion": {
          "Fn::GetAtt": [
            "MyLambdaVersion20210102T061438220ZF893950D",
            "Version"
          ]
        },
        "Name": "Prod"
      },
      "UpdatePolicy": {
        "CodeDeployLambdaAliasUpdate": {
          "ApplicationName": {
            "Ref": "DeploymentGroupApplication7B89ABEB"
          },
          "DeploymentGroupName": {
            "Ref": "DeploymentGroup6D277AF0"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/LambdaAlias/Resource"
      }
    },
    "DeploymentGroupApplication7B89ABEB": {
      "Type": "AWS::CodeDeploy::Application",
      "Properties": {
        "ComputePlatform": "Lambda"
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/DeploymentGroup/Application/Resource"
      }
    },
    "DeploymentGroupServiceRoleA00955F3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codedeploy.ap-southeast-1.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSCodeDeployRoleForLambdaLimited"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/DeploymentGroup/ServiceRole/Resource"
      }
    },
    "DeploymentGroup6D277AF0": {
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {
          "Ref": "DeploymentGroupApplication7B89ABEB"
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "DeploymentGroupServiceRoleA00955F3",
            "Arn"
          ]
        },
        "AutoRollbackConfiguration": {
          "Enabled": true,
          "Events": [
            "DEPLOYMENT_FAILURE"
          ]
        },
        "DeploymentConfigName": "CodeDeployDefault.LambdaLinear10PercentEvery1Minute",
        "DeploymentStyle": {
          "DeploymentOption": "WITH_TRAFFIC_CONTROL",
          "DeploymentType": "BLUE_GREEN"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/DeploymentGroup/Resource"
      }
    },
    "MyApi49610EDF": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "MyApi"
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/MyApi/Resource"
      }
    },
    "MyApiCloudWatchRole2BEC1A9C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/MyApi/CloudWatchRole/Resource"
      }
    },
    "MyApiAccount13882D84": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "MyApiCloudWatchRole2BEC1A9C",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "MyApi49610EDF"
      ],
      "Metadata": {
        "aws:cdk:path": "LambdaStack/MyApi/Account"
      }
    },
    "MyApiDeploymentECB0D05Eda8cf06b6aea7f7afb1715f0b1cc1522": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "MyApi49610EDF"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "MyApiproxyANYFCF46C66",
        "MyApiproxyE14DBEA4",
        "MyApiANYEC3618D9"
      ],
      "Metadata": {
        "aws:cdk:path": "LambdaStack/MyApi/Deployment/Resource"
      }
    },
    "MyApiDeploymentStageprodE1054AF0": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "MyApi49610EDF"
        },
        "DeploymentId": {
          "Ref": "MyApiDeploymentECB0D05Eda8cf06b6aea7f7afb1715f0b1cc1522"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/MyApi/DeploymentStage.prod/Resource"
      }
    },
    "MyApiproxyE14DBEA4": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "MyApi49610EDF",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "MyApi49610EDF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/MyApi/Default/{proxy+}/Resource"
      }
    },
    "MyApiproxyANYApiPermissionLambdaStackMyApi366C8285ANYproxyBB5F72C9": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyLambdaCCE802FB",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:ap-southeast-1:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "MyApi49610EDF"
              },
              "/",
              {
                "Ref": "MyApiDeploymentStageprodE1054AF0"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/MyApi/Default/{proxy+}/ANY/ApiPermission.LambdaStackMyApi366C8285.ANY..{proxy+}"
      }
    },
    "MyApiproxyANYApiPermissionTestLambdaStackMyApi366C8285ANYproxy04D94D0D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyLambdaCCE802FB",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:ap-southeast-1:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "MyApi49610EDF"
              },
              "/test-invoke-stage/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/MyApi/Default/{proxy+}/ANY/ApiPermission.Test.LambdaStackMyApi366C8285.ANY..{proxy+}"
      }
    },
    "MyApiproxyANYFCF46C66": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "MyApiproxyE14DBEA4"
        },
        "RestApiId": {
          "Ref": "MyApi49610EDF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "MyLambdaCCE802FB",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/MyApi/Default/{proxy+}/ANY/Resource"
      }
    },
    "MyApiANYApiPermissionLambdaStackMyApi366C8285ANY48C07A6F": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyLambdaCCE802FB",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:ap-southeast-1:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "MyApi49610EDF"
              },
              "/",
              {
                "Ref": "MyApiDeploymentStageprodE1054AF0"
              },
              "/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/MyApi/Default/ANY/ApiPermission.LambdaStackMyApi366C8285.ANY.."
      }
    },
    "MyApiANYApiPermissionTestLambdaStackMyApi366C8285ANY20BF5FF8": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyLambdaCCE802FB",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:ap-southeast-1:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "MyApi49610EDF"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/MyApi/Default/ANY/ApiPermission.Test.LambdaStackMyApi366C8285.ANY.."
      }
    },
    "MyApiANYEC3618D9": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "MyApi49610EDF",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "MyApi49610EDF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "MyLambdaCCE802FB",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/MyApi/Default/ANY/Resource"
      }
    },
    "MyCfCFDistributionD97466FB": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD"
            ],
            "CachedMethods": [
              "GET",
              "HEAD"
            ],
            "Compress": true,
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none"
              },
              "QueryString": false
            },
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "/",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "CustomOriginConfig": {
                "HTTPPort": 80,
                "HTTPSPort": 443,
                "OriginKeepaliveTimeout": 5,
                "OriginProtocolPolicy": "https-only",
                "OriginReadTimeout": 30,
                "OriginSSLProtocols": [
                  "TLSv1.2"
                ]
              },
              "DomainName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "MyApi49610EDF"
                    },
                    ".execute-api.ap-southeast-1.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Id": "origin1",
              "OriginPath": {
                "Fn::Join": [
                  "",
                  [
                    "/",
                    {
                      "Ref": "MyApiDeploymentStageprodE1054AF0"
                    }
                  ]
                ]
              }
            }
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": {
            "CloudFrontDefaultCertificate": true
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/MyCf/CFDistribution"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.77.0,@aws-cdk/assets=1.77.0,@aws-cdk/aws-apigateway=1.77.0,@aws-cdk/aws-applicationautoscaling=1.77.0,@aws-cdk/aws-autoscaling=1.77.0,@aws-cdk/aws-autoscaling-common=1.77.0,@aws-cdk/aws-autoscaling-hooktargets=1.77.0,@aws-cdk/aws-certificatemanager=1.77.0,@aws-cdk/aws-cloudformation=1.77.0,@aws-cdk/aws-cloudfront=1.77.0,@aws-cdk/aws-cloudwatch=1.77.0,@aws-cdk/aws-codebuild=1.77.0,@aws-cdk/aws-codedeploy=1.77.0,@aws-cdk/aws-codeguruprofiler=1.77.0,@aws-cdk/aws-codepipeline=1.77.0,@aws-cdk/aws-codepipeline-actions=1.77.0,@aws-cdk/aws-ec2=1.77.0,@aws-cdk/aws-ecr=1.77.0,@aws-cdk/aws-ecr-assets=1.77.0,@aws-cdk/aws-ecs=1.77.0,@aws-cdk/aws-elasticloadbalancingv2=1.77.0,@aws-cdk/aws-events=1.77.0,@aws-cdk/aws-events-targets=1.77.0,@aws-cdk/aws-iam=1.77.0,@aws-cdk/aws-kms=1.77.0,@aws-cdk/aws-lambda=1.77.0,@aws-cdk/aws-logs=1.77.0,@aws-cdk/aws-s3=1.77.0,@aws-cdk/aws-s3-assets=1.77.0,@aws-cdk/aws-servicediscovery=1.77.0,@aws-cdk/aws-sns=1.77.0,@aws-cdk/aws-sns-subscriptions=1.77.0,@aws-cdk/aws-sqs=1.77.0,@aws-cdk/aws-ssm=1.77.0,@aws-cdk/cloud-assembly-schema=1.77.0,@aws-cdk/core=1.77.0,@aws-cdk/custom-resources=1.77.0,@aws-cdk/cx-api=1.77.0,@aws-cdk/region-info=1.77.0,jsii-runtime=node.js/v14.14.0"
      },
      "Metadata": {
        "aws:cdk:path": "LambdaStack/CDKMetadata/Default"
      }
    }
  },
  "Parameters": {
    "MyLambdaLambdaSourceBucketNameParameterBD6A9DA0": {
      "Type": "String"
    },
    "MyLambdaLambdaSourceObjectKeyParameter3F0BB05D": {
      "Type": "String"
    }
  },
  "Outputs": {
    "MyApiEndpoint869ABE96": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "MyApi49610EDF"
            },
            ".execute-api.ap-southeast-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "MyApiDeploymentStageprodE1054AF0"
            },
            "/"
          ]
        ]
      }
    }
  }
}